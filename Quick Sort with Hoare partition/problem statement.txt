This program will be slightly more complex than program 1.  This time, we'll do Quick Sort, with a couple of very specific things THAT MUST be included.  Input and output will be the same.

A "straight-forward" quick sort has a couple of potential trouble spots.  
First, if you use the Lomuto partition function (the one shown first in the book), you will get worst-case performance if all of the values in your input are equal. Use the Hoare partition function, not the one by Lomuto.  
Second, you will need to implement randomization -- if the data is already sorted, you'll get worst case behavior without this.  Third -- when you switch to using the Hoare partition function, you will also need to modify the recursive calls to quicksort (slightly).  Look at this carefully, and make sure that you are sorting correctly.

Things that we'll be looking for:

Hoare partition function.
Randomization in the partition
Modification to the quicksort recursive call (the Hoare partition DOES NOT put the pivot value in the "right spot").